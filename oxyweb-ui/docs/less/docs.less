@import "../../less/variables";
@import "../../less/mixins";

//
// @Variables
// --------------------------------------------------
@docs-accent:           #7D9100;
@docs-accent-light:     #AEC900;
@docs-complementary:    #354242;
@docs-border: @brand-lighter;

//
// @Overrides
// --------------------------------------------------
.headline {
	h1 {
		line-height: 1;
	}

	.lead {
		opacity: 0.8;

	}

	a:not(.btn) {
		> span {
			color: @brand-default;
		}

		&:hover > span {
			color: inherit;
		}

		&.html5 {
			padding-left: 15px;
		}
	}
}

//
// Docs-specific
// --------------------------------------------------

.docs-oblique {
	font-style: oblique; // ;)

	> img {
		.border-radius(50px);
		.box-shadow(0 0 16px 2px rgba(255, 255, 255, 0.4));
	}

	> span {
		word-spacing: -16px;
		vertical-align: middle;
		> span {
			font-style: normal;
			font-weight: bold;
		}
	}
}

.docs-boxed {
	.boxed;
}

section > pre, section > .callout > pre {
	.boxed;

	.hljs {
		background-color: transparent;
	}
}


.anchor {
	.icon('link');
}

h1, h2, h3, h4, h5, h6 {
	position: relative;

	.anchor {
		font-size: 90%;
		display: inline-block;
		cursor: pointer;
		margin-right: -5px;

		.animatable(margin-left opacity);
		margin-left: -1em;
		opacity: 0;

		&:before{
			color: @gray-darker;
		}

		&:hover {
			&:before{
				color: inherit;
			}
		}
	}

	&:hover .anchor {
		margin-left: 0;
		opacity: 1;
	}
}

//
// Examples
//
// Isolated sections of example content for each component or feature. Usually
// followed by a code snippet.
//
.docs-example {
	.boxed;
	position: relative;
	background-color: #fefefe;
	padding: 45px 15px 15px;

	/* Echo out a label for the example */
	&:after {
		content: "Example";
		position: absolute;
		top: 15px;
		left: 15px;
		font-size: 12px;
		font-weight: bold;
		color: @gray-light;
		text-transform: uppercase;
		letter-spacing: 1px;
	}

	/* Tweak display of the code snippets when following an example */
	+ pre {
		margin-top: -15px;
	}

	/* Make the examples and snippets not full-width */
	@media (min-width: @grid-float-breakpoint) {
		border-radius: @border-radius-base @border-radius-base 0 0;
		margin-left: 0;
		margin-right: 0;
		
		+ pre {
			margin-top: -16px;
			border-radius: 0 0 @border-radius-base @border-radius-base;
		}
	}

	/* Undo width of container */
	.container {
		width: auto;
	}

	/* Tweak content of examples for optimum awesome */
	> p:last-child,
	> ul:last-child,
	> ol:last-child,
	> blockquote:last-child,
	> .form-control:last-child,
	> .table:last-child,
	> .navbar:last-child,
	> .jumbotron:last-child,
	> .alert:last-child,
	> .panel:last-child,
	> .list-group:last-child,
	> .well:last-child,
	> .progress:last-child,
	> .table-responsive:last-child > .table {
		margin-bottom: 0;
	}
	> p > .close {
		float: none;
	}
	> [class^="toggle"] {
		display: block;
	}
	> .has-tooltips {
		text-align: center;
	}

	form:not(.form-inline) {
		.form-control + .form-control[disabled],
		.form-control[disabled] + .form-control {
			margin-top: 4px;
		}
	}
}

.docs-example-block {
	> [role="button"] {
		display: block;
	}
}

img.placeholder {
	background-color: #EEEEEE;
	@box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.3);
	.box-shadow(@box-shadow)
}

/*
 * Source code controls
 */
.source-controls {
	position: relative;
	display: none;

	.btn-group {
		position: absolute;
		top: 0;
		right: 0;
		z-index: 10;
		display: block;

		.btn {
			color: @brand-default;
			background-color: #fff;
			border: 1px solid @docs-border;
			border-radius: 0 @border-radius-base 0 @border-radius-base;
		}
	}

	.btn:hover,
	.btn:focus,
	.btn:active,
	.btn-clipboard-hover {
		color: #fff;
		background-color: @docs-accent-light;
	}

	@media (min-width: @grid-float-breakpoint) {
		display: block;
	}
}

//
// Layout-specific
// --------------------------------------------------

//
// Cover layout.
//
.cover-layout {
	#wrapper {
		/* Override background property for your custom background-color/image */
		background-image: url(?holder.js/300x300/sky/auto/text:Background);

		#nav-header {
			.top-control{
				display: none;
			}
		}

		#navigation {
			display: none !important;
		}
	}
}

// Glyphicons list
//---------------------------------------------------------------
.docs-glyphicons {
	margin: 0 -19px 20px -16px;
	overflow: hidden;
}
.docs-glyphicons-list {
	padding-left: 19px;
	list-style: none;
}
.docs-glyphicons li {
	float: left;
	width: 12%;
	height: 115px;
	padding: 10px;
	font-size: 10px;
	line-height: 1.4;
	text-align: center;
	border: 1px solid #fff;
	background-color: #f9f9f9;
}
.docs-glyphicons .glyphicon {
	margin-top: 5px;
	margin-bottom: 10px;
	font-size: 24px;
}
.docs-glyphicons .glyphicon-class {
	display: block;
	text-align: center;
	word-wrap: break-word; /* Help out IE10+ with class names */
}
.docs-glyphicons li:hover {
	color: #fff;
	background-color: #9783b9;
}

// CodeBox
// --------------------------------------------------
.codebox {
	@codebox-bg: #141414;
	@codebox-body-height: 300px;
	.box-shadow(0 0 6px fade(@docs-border, 80%));

	position: relative;
	background-color: @codebox-bg;

	// IDE:
	header, footer {
		color: @white;
		background-color: @docs-accent-light;
	}

	header {
		&.codebox-branding {
			.codebox-title, .nav-toggle {
				padding: @padding-large-vertical;
				margin: 0;
			 }

			@media (min-width: @screen-md-min) {
				.nav-toggle {
					display: none;
				}
			}

			border-bottom: 1px solid @white;

			@media (min-width: @screen-md-min) {
				border-bottom: none;
			}
		}

		&.codebox-toolbar {
			background-color: @docs-accent;
		}

		.nav > li {
			> a {
				display: inline-block;
				color: @white;
				padding: 16px 8px;

				@media (min-width: @screen-md-min) {
					padding: 16px 12px;
				}

				label {
					margin: 0;

					&:not(:first-child) {
						margin-left: @padding-base-horizontal;
					}
				}

				.switch {
					margin-top: -3px;
					margin-bottom: -4px;
				}
			}

			&[role="menuitem"] {
				> a:hover,
				> a:focus {
					background-color: @docs-accent-light;
				}

				&.active {
					.bubble-tail(@codebox-bg, @placement: bottom);
				}
			}

			&.active {
				> a {
					color: @white;
				}
			}
		}

		.codebox-nav-views {
			border-right: 1px dotted @docs-accent-light;
		}

		.codebox-nav-controls {
			border-right: 1px dotted #7D9100;
		}

		.codebox-nav-preview > li.active {
			.bubble-tail(@white, @placement: bottom);
		}
	}

	footer {
		padding: @padding-base-vertical @padding-base-horizontal;
	}

	.codebox-navigation {
		max-height: @codebox-body-height;
		overflow-y: auto;

		@media (min-width: @grid-float-breakpoint) {
			max-height: @codebox-body-height * 2;
		}

		@media (min-width: @screen-md) {
			&.collapse {
				display: block !important;
				visibility: visible;
				height: auto !important;
			}
		}

		.nav {
			padding: @padding-large-vertical 0 @padding-large-vertical @padding-large-vertical;

			> li {
				border: none;

				&.nav-header {
					color: @docs-accent-light;
				}

				&:not(.nav-header) {
					margin-left: 4px;
				}

				> a {
					color: @white;
					padding: 4px 0 4px 4px !important;
					border: none;

					&:hover,
					&:focus {
						&:before {
							border-left-color: @docs-accent;
						}
					}
				}
			}

			> li > .nav {
				font-size: @font-size-base - 1;
				padding: 0;
				margin-left: 4px;

				.selected > a {
					color: @docs-accent-light;
				}

				.nav {
					font-size: @font-size-base - 2;
				}
			}
		}
	}

	// Editors:
	.codebox-editor {
		.border-radius(0);
		border: none;
		margin: 5px 0 0 0;
		width: auto;
		min-height: @codebox-body-height - 5;

		@media (min-width: @grid-float-breakpoint) {
			min-height: @codebox-body-height * 2 - 5;
		}
	}

	// Preview:
	.codebox-preview {
		.box-shadow(inset 0 0 8px rgba(0, 0, 0, 0.1));
		background-color: @white;
		position: relative;
		height: @codebox-body-height;
		margin: 0;

		@media (min-width: @grid-float-breakpoint) {
			height: @codebox-body-height * 2;
		}

		iframe {
			border: none;
			width: 100%;
			height: 100%;
		}
	}

	// Notifications:
	.alert {
		margin-bottom: 5px;
	}

	[data-codebox-notification="state"] {
		.icon('cube');

		&:before {
			min-width: inherit;
			padding: 2px;
		}

		.codebox-state-loading& {
			.icon-content('spinner');
			.fa-spin;
		}

		.codebox-state-ready& {
			.icon-content('check');
		}

		.codebox-state-loaded& {
			.icon-content('file');
		}

		.codebox-state-error& {
			.icon-content('exclamation-triangle');
		}
	}
}

.switch {
	cursor: pointer;
	position: relative;
	display: inline-block;
	vertical-align: top;
	width: 56px;
	height: 26px;
	padding: 3px;
	background-color: white;
	border-radius: 18px;

	.switch-label {
		position: relative;
		display: block;
		height: 20px;
		font-size: 10px;
		text-transform: uppercase;
		background: #eceeef;
		border-radius: inherit;
		box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.12), inset 0 0 2px rgba(0, 0, 0, 0.15);
		.animatable(opacity background,  0.15s, ease-out);

		&:before, &:after {
			position: absolute;
			top: 50%;
			margin-top: -.5em;
			line-height: 1;
			.transition(inherit);
		}
		&:before {
			content: attr(data-off);
			right: 11px;
			color: #aaa;
			text-shadow: 0 1px rgba(255, 255, 255, 0.5);
		}
		&:after {
			content: attr(data-on);
			left: 11px;
			color: white;
			text-shadow: 0 1px rgba(0, 0, 0, 0.2);
			opacity: 0;
		}
	}


	.switch-handle {
		position: absolute;
		top: 4px;
		left: 4px;
		width: 18px;
		height: 18px;
		background: white;
		border-radius: 10px;
		.animatable(left, 0.15s, ease-out);

		&:before {
			content: '';
			position: absolute;
			top: 50%;
			left: 50%;
			margin: -6px 0 0 -6px;
			width: 12px;
			height: 12px;
			background: #f9f9f9;
			border-radius: 6px;
			box-shadow: inset 0 1px rgba(0, 0, 0, 0.02);
			#gradient .vertical(#eeeeee, white);
		}
	}

	.switch-input {
		position: absolute;
		top: 0;
		left: 0;
		opacity: 0;

		&:checked {
			~ .switch-label {
				background: #47a8d8;
				box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.15), inset 0 0 3px rgba(0, 0, 0, 0.2);
				&:before {
					opacity: 0;
				}
				&:after {
					opacity: 1;
				}
			}

			~ .switch-handle {
				left: 34px;
				box-shadow: -1px 1px 5px rgba(0, 0, 0, 0.2);
			}
		}
	}

	&.switch-green > .switch-input:checked ~ .switch-label {
		background: @brand-success;
	}
}

//
// Dev
// --------------------------------------------------
.dev-only {
	display: none;
}

//
// Mixins
// --------------------------------------------------
.boxed(@border: @docs-border, @radius: @border-radius-base, @shadow: 0 0 6px fade(@docs-border, 80%)) {
	.box-shadow(@shadow);
	border-width: 1px 0;
	border-style: solid;
	border-color: @border;
	border-radius: 0;
	margin: 0 -15px 15px;

	@media (min-width: @grid-float-breakpoint) {
		margin-left: 0;
		margin-right: 0;
		border-width: 1px;
		border-radius: @radius;
	}
}
